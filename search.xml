<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>什么是“可计算图像”？广义向量图像的理论基础初探</title>
    <url>/2025/04/21/computable-image-theory-and-application/</url>
    <content><![CDATA[<blockquote>
<p>如果说像素图像是“存储”，那么可计算图像则是“生成”——在信息冗余的时代，图像的“可计算性”才是真正高效的信息结构。</p>
</blockquote>
<h2
id="一位图与向量图图像的两种范式">一、位图与向量图：图像的两种范式</h2>
<p>传统图像采用位图表示，每个像素 <code>I[x, y]</code>
是颜色数据。但这种方式存在信息冗余，且难以缩放。相比之下，<strong>矢量图使用几何图元与函数表示图像</strong>，具有结构清晰、可缩放、易修改等优点。</p>
<p>SVG 示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span> <span class="attr">height</span>=<span class="string">&quot;120&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 120 120&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;60&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;60&quot;</span> <span class="attr">r</span>=<span class="string">&quot;50&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;black&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;3&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;tomato&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>渲染如下：</p>
<svg width="120" height="120" viewBox="0 0 120 120" xmlns="http://www.w3.org/2000/svg">
<circle cx="60" cy="60" r="50" stroke="black" stroke-width="3" fill="tomato" />
</svg>
<p>⸻</p>
<h2 id="二可计算图像的数学基础">二、可计算图像的数学基础</h2>
<p>图像是函数</p>
<p>我们可以将图像视为函数：</p>
<p><span
class="math display"><em>I</em> : ℝ<sup>2</sup> → ℝ<sup>3</sup>,  <em>I</em>(<em>x</em>, <em>y</em>) = (<em>r</em>, <em>g</em>, <em>b</em>)</span></p>
<p>即图像是二维平面上到 RGB
空间的映射。若该函数可由程序计算，则称之为可计算图像（Computable
Image）。</p>
<p>可计算函数</p>
<p>函数 <span
class="math inline"><em>I</em>(<em>x</em>, <em>y</em>)</span>
是可计算的，当存在有限程序可在任意精度下逼近 <span
class="math inline"><em>I</em>(<em>x</em>, <em>y</em>)</span>。这就为构建图像的“生成逻辑”提供了理论依据。</p>
<p>⸻</p>
<h2 id="三表示范式">三、表示范式</h2>
<ol type="1">
<li>参数图像（SVG、TikZ）</li>
</ol>
<p>图像是参数的组合，如：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\draw</span>[blue, thick] (0,0) circle (1cm);</span><br></pre></td></tr></table></figure>
<ol start="2" type="1">
<li>过程图像（Procedural）</li>
</ol>
<p>图像通过代码生成，如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">image</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> (sin(x * <span class="number">3.14</span>), x % <span class="number">1</span>, y % <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<ol start="3" type="1">
<li>生成模型（GAN）</li>
</ol>
<p><span
class="math display"><em>I</em>(<em>z</em>) = Decoder(<em>z</em>)</span></p>
<p>潜变量生成图像，是可计算图像的一种神经建模形式。</p>
<p>⸻</p>
<h2 id="四博客中的实际应用">四、博客中的实际应用</h2>
<p>使用 Mermaid 插图</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">  A[Pixel 图像] --&gt;|存储密集| B[位图]</span><br><span class="line">  A --&gt;|生成函数| C[向量图]</span><br><span class="line">  C --&gt; D[SVG]</span><br><span class="line">  C --&gt; E[Procedural]</span><br><span class="line">  C --&gt; F[GAN]</span><br></pre></td></tr></table></figure>
<p>使用 MathJax 显示公式</p>
<p>示例公式：</p>
<p><span class="math display">$$
I(x, y) = \begin{cases}
\text{红色}, &amp; x^2 + y^2 &lt; 1 \
\text{蓝色}, &amp; \text{否则}
\end{cases}
$$</span></p>
<p>⸻</p>
<h2 id="五总结">五、总结</h2>
<p>“可计算图像”代表了图像表示从静态数据向函数式建模的范式转变。它不仅能节省空间、提高显示效果，更为自动化内容生成和科学可视化提供坚实基础。</p>
<p>未来图像的更多可能性，将由程序来定义。</p>
<p>⸻</p>
]]></content>
      <categories>
        <category>技术理论</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
        <tag>向量图</tag>
        <tag>SVG</tag>
        <tag>可计算性</tag>
      </tags>
  </entry>
  <entry>
    <title>Money is all you need</title>
    <url>/2025/04/21/Money-is-all-you-need/</url>
    <content><![CDATA[<blockquote>
<p>“不需要
Attention，不需要数据，不需要理解，更不需要常识。只要你够有钱——Money is
all you need.”</p>
</blockquote>
<h2 id="一序章从理论到钞能力">一、序章：从理论到钞能力</h2>
<p>AI 从前是数学家的花园、程序员的游戏场，如今却逐渐变成 VC
与企业家的战场。</p>
<p>量子计算亦然：几百页的理论推导和稀疏纠错图谱还没落地，一纸融资计划就能估值百亿美金。</p>
<p>科学家再无必要理解，只需采购 10,000 块 H100，挂上“AGI
即将诞生”，即可出货。</p>
<h2
id="二训练逻辑参数百万金钱千万">二、训练逻辑：参数百万，金钱千万</h2>
<p>我们来定义现代科研的损失函数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">L = \frac&#123;1&#125;&#123;\text&#123;Budget&#125;&#125; \cdot \left( \text&#123;Citation&#125; + \lambda \cdot \text&#123;Hype&#125;^2 \right)</span><br></pre></td></tr></table></figure>
<p>在该函数中，预算越大，loss 越低——只需“堆钱”，不需“调参”。</p>
<p>研究者不再调节梯度下降，而是在会议室中讨论 AWS Spot
实例打几折，或争夺 TSMC 的先进产能配额。</p>
<h2
id="三量子计算叠词带你飞"><strong>三、量子计算：“叠词”带你飞</strong></h2>
<p>“噪声中容忍错误的近似模拟的类量子退相干多体纠缠自适应演化优化加速器网络”。</p>
<p>你不需要听懂这句话，审稿人也不需要。</p>
<p>只要它长、它量子、它能配图和调色，一篇 paper
就能进入《Science》封面候选，配上一行文案：</p>
<blockquote>
<p>“我们提出了一种首个实用级近量子生成建模平台。”（N=4）</p>
</blockquote>
<h2 id="四数据是石油gpu-是新地球"><strong>四、数据是石油，GPU
是新地球</strong></h2>
<p>当我们说 “Data is the new oil”，并不是隐喻。数据在 AI
世界中，已经具备了类似石油的地缘属性：</p>
<ul>
<li>有人偷抓网页，有人垄断语料；</li>
<li>有人卷 C4 数据集，有人圈地开源许可证；</li>
<li>有人藏着法语金融领域数据，不告诉你模型其实训练过；</li>
</ul>
<p>而你，还在问「为什么我的模型不泛化」？</p>
<p>答案很简单：你不够有钱。</p>
<h2 id="五结语下一代-ai将由美元训练"><strong>五、结语：下一代
AI，将由美元训练</strong></h2>
<p>下一代 AI
并不会更聪明，它只会更贵、更大、更难以复制。它将成为科技寡头的壁垒、政策谈判的筹码、国家算力的象征。</p>
<p>在这个时代，我们终于理解了那个古老命题的变体：</p>
<blockquote>
<p>Intelligence is emergent.</p>
</blockquote>
<blockquote>
<p>But Money — money is fundamental.</p>
</blockquote>
<hr />
<p>📝 <strong>作者注：</strong></p>
<p>本文纯属讽刺，请勿上纲上线。本人亦曾被金钱香气短暂迷惑，也曾为申请 30
张 A100 写过极其“前瞻性”的
proposal。吾等虽无钞能力，但犹有“讽”能力。</p>
]]></content>
      <categories>
        <category>技术笔记</category>
      </categories>
      <tags>
        <tag>Computer science</tag>
        <tag>quantum computing</tag>
      </tags>
  </entry>
  <entry>
    <title>about</title>
    <url>/about/index.html</url>
    <content><![CDATA[
]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[
]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[
]]></content>
  </entry>
</search>
